<?php
// Generated by https://github.com/bramp/protoc-gen-php// Please include protocolbuffers before this file, for example:
//   require('protocolbuffers.inc.php');
//   require('POGOProtos/Networking/Platform/Responses/BuyItemAndroidResponse.php');

namespace POGOProtos\Networking\Platform\Responses {

  use Protobuf;
  use ProtobufEnum;
  use ProtobufIO;
  use ProtobufMessage;

  // enum POGOProtos.Networking.Platform.Responses.BuyItemAndroidResponse.Status
  abstract class BuyItemAndroidResponse_Status extends ProtobufEnum {
    const UNKNOWN = 0;
    const SUCCESS = 1;

    public static $_values = array(
      0 => "UNKNOWN",
      1 => "SUCCESS",
    );

    public static function isValid($value) {
      return array_key_exists($value, self::$_values);
    }

    public static function toString($value) {
      checkArgument(is_int($value), 'value must be a integer');
      if (array_key_exists($value, self::$_values))
        return self::$_values[$value];
      return 'UNKNOWN';
    }
  }

  // message POGOProtos.Networking.Platform.Responses.BuyItemAndroidResponse
  final class BuyItemAndroidResponse extends ProtobufMessage {

    private $_unknown;
    private $result = \POGOProtos\Networking\Platform\Responses\BuyItemAndroidResponse_Status::UNKNOWN; // optional .POGOProtos.Networking.Platform.Responses.BuyItemAndroidResponse.Status result = 1
    private $purchaseToken = ""; // optional string purchase_token = 2

    public function __construct($in = null, &$limit = PHP_INT_MAX) {
      parent::__construct($in, $limit);
    }

    public function read($fp, &$limit = PHP_INT_MAX) {
      $fp = ProtobufIO::toStream($fp, $limit);
      while(!feof($fp) && $limit > 0) {
        $tag = Protobuf::read_varint($fp, $limit);
        if ($tag === false) break;
        $wire  = $tag & 0x07;
        $field = $tag >> 3;
        switch($field) {
          case 1: // optional .POGOProtos.Networking.Platform.Responses.BuyItemAndroidResponse.Status result = 1
            if($wire !== 0) {
              throw new \Exception("Incorrect wire format for field $field, expected: 0 got: $wire");
            }
            $tmp = Protobuf::read_varint($fp, $limit);
            if ($tmp === false) throw new \Exception('Protobuf::read_varint returned false');
            $this->result = $tmp;

            break;
          case 2: // optional string purchase_token = 2
            if($wire !== 2) {
              throw new \Exception("Incorrect wire format for field $field, expected: 2 got: $wire");
            }
            $len = Protobuf::read_varint($fp, $limit);
            if ($len === false) throw new \Exception('Protobuf::read_varint returned false');
            $tmp = Protobuf::read_bytes($fp, $len, $limit);
            if ($tmp === false) throw new \Exception("read_bytes($len) returned false");
            $this->purchaseToken = $tmp;

            break;
          default:
            $limit -= Protobuf::skip_field($fp, $wire);
        }
      }
    }

    public function write($fp) {
      if ($this->result !== \POGOProtos\Networking\Platform\Responses\BuyItemAndroidResponse_Status::UNKNOWN) {
        fwrite($fp, "\x08", 1);
        Protobuf::write_varint($fp, $this->result);
      }
      if ($this->purchaseToken !== "") {
        fwrite($fp, "\x12", 1);
        Protobuf::write_varint($fp, strlen($this->purchaseToken));
        fwrite($fp, $this->purchaseToken);
      }
    }

    public function size() {
      $size = 0;
      if ($this->result !== \POGOProtos\Networking\Platform\Responses\BuyItemAndroidResponse_Status::UNKNOWN) {
        $size += 1 + Protobuf::size_varint($this->result);
      }
      if ($this->purchaseToken !== "") {
        $l = strlen($this->purchaseToken);
        $size += 1 + Protobuf::size_varint($l) + $l;
      }
      return $size;
    }

    public function clearResult() { $this->result = \POGOProtos\Networking\Platform\Responses\BuyItemAndroidResponse_Status::UNKNOWN; }
    public function getResult() { return $this->result;}
    public function setResult($value) { $this->result = $value; }

    public function clearPurchaseToken() { $this->purchaseToken = ""; }
    public function getPurchaseToken() { return $this->purchaseToken;}
    public function setPurchaseToken($value) { $this->purchaseToken = $value; }

    public function __toString() {
      return ''
           . Protobuf::toString('result', $this->result, \POGOProtos\Networking\Platform\Responses\BuyItemAndroidResponse_Status::UNKNOWN)
           . Protobuf::toString('purchase_token', $this->purchaseToken, "");
    }

    // @@protoc_insertion_point(class_scope:POGOProtos.Networking.Platform.Responses.BuyItemAndroidResponse)
  }

}